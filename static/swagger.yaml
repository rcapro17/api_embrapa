openapi: 3.0.0
info:
  title: Embrapa Vitivinicultura API
  version: "1.0"
  description: API para acesso a dados de vitivinicultura da Embrapa.
  contact:
    email: api@embrapa.br
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: /
    description: api-official

paths:
  /token:
    get:
      summary: Gera um token de acesso JWT
      description: Endpoint público para geração de token de acesso
      responses:
        "200":
          description: Token JWT gerado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    description: Token JWT para autenticação
                  expires_in:
                    type: integer
                    description: Tempo de expiração em segundos
                  token_type:
                    type: string
                    example: "Bearer"
        "401":
          description: Credenciais inválidas
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/refresh:
    post:
      summary: Gera um novo token de acesso usando refresh token
      description: Renova o token de acesso usando um refresh token válido
      security:
        - bearerRefresh: []
      responses:
        "200":
          description: Tokens gerados com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    description: Novo token JWT para autenticação
                  refresh_token:
                    type: string
                    description: Novo refresh token
                  expires_in:
                    type: integer
                    description: Tempo de expiração em segundos
        "401":
          description: Refresh token inválido ou expirado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Acesso negado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/producao:
    get:
      summary: Retorna dados de produção
      description: Retorna dados de produção vitivinícola com filtros e paginação
      security:
        - bearerAuth: []
      parameters:
        - $ref: "#/components/parameters/ano"
        - name: categoria_produto
          in: query
          schema:
            type: string
            enum: ["VINHO DE MESA", "SUCO", "DERIVADOS"]
          description: Filtra pela categoria de produto
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/offset"
      responses:
        "200":
          description: Lista paginada de dados de produção
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "500":
          $ref: "#/components/responses/ServerError"

  /api/processamento:
    get:
      summary: Retorna dados de processamento
      description: Retorna dados de processamento de uvas com filtros e paginação
      security:
        - bearerAuth: []
      parameters:
        - $ref: "#/components/parameters/ano"
        - name: categoria_uva
          in: query
          schema:
            type: string
            enum:
              [
                "Viníferas",
                "Americanas e híbridas",
                "Uvas de mesa",
                "Sem classificação",
              ]
          description: Filtra pela categoria de uva
        - name: tipo_uva
          in: query
          schema:
            type: string
            enum: ["Tintas", "Brancas e Rosadas"]
          description: Filtra pelo tipo de uva
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/offset"
      responses:
        "200":
          description: Lista paginada de dados de processamento
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PaginatedResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/CultivarProcessamento"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "500":
          $ref: "#/components/responses/ServerError"

  /api/comercializacao:
    get:
      summary: Retorna dados de comercialização
      description: Retorna dados de comercialização de produtos vitivinícolas com filtros e paginação
      security:
        - bearerAuth: []
      parameters:
        - $ref: "#/components/parameters/ano"
        - name: categoria_produto
          in: query
          schema:
            type: string
            enum:
              [
                "VINHO DE MESA",
                "ESPUMANTES",
                "SUCO DE UVAS",
                "VINHO FINO DE MESA",
              ]
          description: Filtra pela categoria de produto
        - name: tipo_produto
          in: query
          schema:
            type: string
            enum: ["Tinto", "Branco", "Rosado"]
          description: Filtra pelo tipo de produto
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/offset"
      responses:
        "200":
          description: Lista paginada de dados de comercialização
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PaginatedResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/CultivarComercializacao"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "500":
          $ref: "#/components/responses/ServerError"

  /api/importacao:
    get:
      summary: Retorna dados de importação
      description: Retorna dados de importação de produtos vitivinícolas com filtros e paginação
      security:
        - bearerAuth: []
      parameters:
        - $ref: "#/components/parameters/ano"
        - name: categoria_produto
          in: query
          schema:
            type: string
            enum:
              [
                "Vinhos de mesa",
                "Espumantes",
                "Uvas frescas",
                "Uvas passas",
                "Suco de uva",
              ]
          description: Filtra pela categoria de produto
        - name: pais
          in: query
          schema:
            type: string
            enum: ["Argentina", "Chile", "Portugal", "Itália", "Brasil"]
          description: Filtra pelo país de origem
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/offset"
      responses:
        "200":
          description: Lista paginada de dados de importação
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PaginatedResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/CultivarImportacao"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "500":
          $ref: "#/components/responses/ServerError"

  /api/exportacao:
    get:
      summary: Retorna dados de exportação
      description: Retorna dados de exportação de produtos vitivinícolas com filtros e paginação
      security:
        - bearerAuth: []
      parameters:
        - $ref: "#/components/parameters/ano"
        - name: categoria_produto
          in: query
          schema:
            type: string
            enum:
              - "Vinhos de mesa"
              - "Espumantes"
              - "Uvas frescas"
              - "Suco de uva"
          description: Filtra pela categoria de produto
        - name: pais
          in: query
          schema:
            type: string
            enum:
              - "Estados Unidos"
              - "Portugal"
              - "China"
              - "Reino Unido"
          description: Filtra pelo país de destino
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/offset"
      responses:
        "200":
          description: Lista paginada de dados de exportação
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PaginatedResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/CultivarExportacao"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "500":
          $ref: "#/components/responses/ServerError"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Token de acesso JWT
    bearerRefresh:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Refresh token JWT

  parameters:
    ano:
      name: ano
      in: query
      schema:
        type: integer
        minimum: 1970
        maximum: 2024
      description: Filtra pelo ano (1970–2024)
    limit:
      name: limit
      in: query
      schema:
        type: integer
        minimum: 1
        maximum: 1000
        default: 100
      description: Quantidade de itens por página
    offset:
      name: offset
      in: query
      schema:
        type: integer
        minimum: 0
        default: 0
      description: Posição inicial para paginação

  responses:
    BadRequest:
      description: Requisição inválida
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    Unauthorized:
      description: Não autenticado
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    ServerError:
      description: Erro interno do servidor
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"

  schemas:
    PaginatedResponse:
      type: object
      properties:
        data:
          type: array
          items: {}
        total:
          type: integer
          description: Total de registros disponíveis
        limit:
          type: integer
          description: Limite de registros por página
        offset:
          type: integer
          description: Offset atual
        links:
          type: object
          properties:
            next:
              type: string
              format: uri
              description: Link para próxima página
            prev:
              type: string
              format: uri
              description: Link para página anterior

    Cultivar:
      type: object
      properties:
        etapa:
          type: string
          description: Qual etapa (Produção, Processamento, etc.)
        categoria_produto:
          type: string
          description: Categoria de produto (Produção/Comercialização/Importação)
        tipo_produto:
          type: string
          description: Nome do tipo de produto ou “TOTAL” quando for linha de totais
        quantidade_l:
          type: string
          description: Quantidade em litros (string formatada com pontos)
        ano:
          type: integer
          description: Ano do dado

    CultivarProcessamento:
      type: object
      properties:
        etapa:
          type: string
          description: Sempre “Processamento”
        categoria_uva:
          type: string
          description: Categoria de uva (ex. “Viníferas”)
        tipo_uva:
          type: string
          description: Tipo de uva (ex. “Tinto”, “Branco”, “Rosado”)
        quantidade_l:
          type: string
          description: Quantidade em litros (string formatada com pontos)
        ano:
          type: integer
          description: Ano do dado

    CultivarComercializacao:
      type: object
      properties:
        etapa:
          type: string
          description: Sempre “Comercialização”
        categoria_produto:
          type: string
          description: Categoria do produto (ex. “VINHO DE MESA”)
        tipo_produto:
          type: string
          description: Tipo de produto (ex. “Tinto”, “Branco”, etc.)
        quantidade_l:
          type: string
          description: Quantidade em litros (string formatada com pontos)
        ano:
          type: integer
          description: Ano do dado

    CultivarImportacao:
      type: object
      properties:
        etapa:
          type: string
          description: Sempre “Importação”
        categoria_produto:
          type: string
          description: Categoria do produto importado (ex. “Vinhos de mesa”)
        ano:
          type: integer
          description: Ano do dado
        pais:
          type: string
          description: País de origem
        quantidade_kg:
          type: integer
          description: Quantidade em kg (zero quando valor “-”)
        valor_usd:
          type: integer
          description: Valor em dólares (zero quando valor “-”)

    CultivarExportacao:
      type: object
      properties:
        etapa:
          type: string
          description: Sempre “Exportação”
        categoria_produto:
          type: string
          description: Categoria do produto exportado (ex. “Vinhos de mesa”)
        ano:
          type: integer
          description: Ano do dado
        pais:
          type: string
          description: País de destino
        quantidade_kg:
          type: integer
          description: Quantidade em kg (zero quando valor “-”)
        valor_usd:
          type: integer
          description: Valor em dólares (zero quando valor “-”)

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Código do erro
          example: "invalid_request"
        error_description:
          type: string
          description: Descrição do erro
          example: "Invalid parameters provided"
        timestamp:
          type: string
          format: date-time
          description: Quando o erro ocorreu
